{% comment %} open the drawer on changes to the cart form (when products are added to cart) {% endcomment %}
<a
  href="{{ routes.cart_url }}"
  x-data="{ active: {% if request.path == '{{ routes.cart_url }}' %}true{% else %}false{% endif %} }"
  @window:navigation.window="active = location.pathname === '{{ routes.cart_url }}'"
  onclick="event.preventDefault(); event.stopPropagation(); document.getElementById('cart_drawer')?.showModal()"
  :class="active ? 'underline' : ''"
  class="button"
  {% comment %} uncomment this to show drawer when product is added to cart {% endcomment %}
  {% comment %} @ajax:after.window="(e) => e.target.getAttribute('x-target')?.includes('cart_drawer_content') && location.pathname !== '{{ routes.cart_url }}' && document.getElementById('cart_drawer')?.showModal()" {% endcomment %}
>
  Cart (<span id="cart_amount">{{- cart.item_count -}}</span>)
</a>

<dialog scroll-lock id="cart_drawer" closedby="any" class="right-0 left-auto h-screen max-h-none w-full max-w-md">
  <div
    id="cart_drawer_content"
    class="top-0 grid h-dvh grid-rows-[auto_1fr] bg-white pb-4 text-sm"
  >
    <header class="mx-4 flex h-10 items-center justify-between border-b border-gray-300">
      <p class="text-xs uppercase">
        Your cart (
        {{- cart.item_count -}}
        )
      </p>

      <button onclick="this.closest('dialog')?.close()" aria-label="Close cart drawer" class="button size-5">
        {% render 'icon-cross' %}
      </button>
    </header>

    {% render 'cart-form' %}

    {% unless cart == empty %}
      <footer class="mt-4 mb-2 justify-self-center text-center">
        <a href="{{ routes.cart_url }}" class="button inline-block"> Go to cart </a>
      </footer>
    {% endunless %}
  </div>
</dialog>

{% stylesheet %}
  dialog#cart_drawer[open] {
    transform: translateX(0);
  }

  dialog#cart_drawer {
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);

    transform: translateX(100%);
    transition: all 500ms var(--ease-in-out) allow-discrete;
  }

  @starting-style {
    dialog#cart_drawer[open] {
      transform: translateX(100%);
    }
  }

  dialog#cart_drawer::backdrop {
    background-color: transparent;
    transition: all 500ms var(--ease-in-out) allow-discrete;
  }

  dialog#cart_drawer[open]::backdrop {
    background-color: rgb(0 0 0 / 25%);
  }

  @starting-style {
    dialog#cart_drawer[open]::backdrop {
      background-color: transparent;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Cart drawer",
  "presets": [
    {
      "name": "Cart drawer"
    }
  ]
}
{% endschema %}
